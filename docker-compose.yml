version: '3.3'

services:
  db:
    container_name: docker_mysql # Name of the MySQL container
    build:
      context: . # Build context for the MySQL service
      dockerfile: internal/db.Dockerfile # Dockerfile location for the MySQL image
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT_DOCKER}" # Map host MySQL port to container port
    env_file:
      - .env # Load environment variables from the .env file
    volumes:
      - mysql_data:/var/lib/mysql # Persist MySQL data in a named volume
    networks:
      - default # Use the default network
    restart: always # Restart the container if it stops
    command: 
      # Use native password authentication and Disable fast shutdown for InnoDB
      --default-authentication-plugin=mysql_native_password 
      --innodb-fast-shutdown=0 
    healthcheck: # Health check configuration for the MySQL service
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] # Command to check if MySQL is running
      timeout: 20s # Timeout for the health check
      retries: 10 # Number of retries before considering the service unhealthy

  api:
    container_name: docker_function # Name of the API container
    build:
      context: . # Build context for the API service
      dockerfile: internal/api.Dockerfile # Dockerfile location for the API image
    ports:
      - "${HOST_PORT}:${HOST_PORT_DOCKER}" # Map host API port to container port
    env_file:
      - .env # Load environment variables from the .env file
    depends_on:
      db:
        condition: service_healthy # Ensure the database service is healthy before starting the API
    volumes:
      - .:/app/ # Mount current directory to /app in the container
    networks:
      - default # Use the default network

networks:
  default: # Default network configuration

volumes:
  mysql_data: # Named volume for MySQL data persistence
